---
version: '3'
services:
  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    container_name: zookeeper
    command: [
      "sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - my-network

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    container_name: kafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - my-network

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=comments
    ports:
      - '5432:5432'
    networks:
      - my-network
    volumes:
      - db:/var/lib/postgresql/data

  comment-producer:
    image: localhost/quarkus/comment-producer-jvm
    build:
      context: comment-producer
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    container_name: comment-producer
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - my-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'

  blacklist-service:
    image: localhost/quarkus/blacklist-service-jvm
    build:
      context: blacklist-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    container_name: blacklist-service
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    networks:
      - my-network
    environment:
      WORDS_BLACKLIST: bad,very,lol
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'

  comment-consumer:
    image: localhost/quarkus/comment-consumer-jvm
    build:
      context: comment-consumer
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    container_name: comment-consumer
    depends_on:
      - kafka
      - db
    ports:
      - "8082:8080"
    networks:
      - my-network
    environment:
      QUARKUS_DATASOURCE_USERNAME: 'test'
      QUARKUS_DATASOURCE_PASSWORD: 'test'
      QUARKUS_DATASOURCE_REACTIVE_URL: 'vertx-reactive:postgresql://db:5432/comments'
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'

networks:
  my-network:
    name: kafka

volumes:
  db:
